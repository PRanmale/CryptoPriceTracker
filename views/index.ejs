<!DOCTYPE html>
<html lang="en">
      <head>
            <meta charset="UTF-8" />
            <meta
                  name="viewport"
                  content="width=device-width, initial-scale=1.0"
            />
            <title>Cryptocurrency Prices</title>
            <link
                  rel="stylesheet"
                  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
            />
            <style>
                  body {
                        font-family: "Arial", sans-serif;
                        margin: 0;
                        padding: 0;
                        background: linear-gradient(135deg, #2b2d42, #8d99ae);
                        color: #edf2f4;
                  }
                  header {
                        text-align: center;
                        padding: 20px 0;
                        background: #ef233c;
                        color: #edf2f4;
                        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                  }
                  h1 {
                        margin: 0;
                        font-size: 2.5rem;
                  }
                  h2 {
                        margin-top: 30px;
                        font-size: 1.8rem;
                        text-align: center;
                  }
                  form {
                        max-width: 600px;
                        margin: 20px auto;
                        display: flex;
                        flex-wrap: wrap;
                        gap: 10px;
                        justify-content: center;
                  }
                  input[type="text"] {
                        flex: 1;
                        padding: 10px;
                        border: none;
                        border-radius: 4px;
                        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                        font-size: 1rem;
                  }
                  button {
                        padding: 10px 20px;
                        border: none;
                        border-radius: 4px;
                        background: #ef233c;
                        color: #edf2f4;
                        cursor: pointer;
                        font-size: 1rem;
                        transition: background 0.3s;
                  }
                  button:hover {
                        background: #d90429;
                  }
                  .result,
                  .deviationResult {
                        max-width: 600px;
                        margin: 20px auto;
                        background: #edf2f4;
                        color: #2b2d42;
                        padding: 20px;
                        border-radius: 8px;
                        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                  }
                  table {
                        width: 100%;
                        border-collapse: collapse;
                        margin: 20px auto;
                        max-width: 800px;
                        background: #edf2f4;
                        color: #2b2d42;
                        border-radius: 8px;
                        overflow: hidden;
                        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                  }
                  th,
                  td {
                        padding: 12px;
                        text-align: center;
                        border: 1px solid #ddd;
                  }
                  th {
                        background: #8d99ae;
                        color: #edf2f4;
                        font-weight: bold;
                  }
                  tbody tr:nth-child(odd) {
                        background: #f8f9fa;
                  }
                  tbody tr:nth-child(even) {
                        background: #e9ecef;
                  }
                  tbody tr:hover {
                        background: #ef233c;
                        color: #edf2f4;
                        cursor: pointer;
                  }
            </style>
      </head>
      <body>
            <header>
                  <h1>Cryptocurrency Prices</h1>
            </header>
            <h2>Get Cryptocurrency Stats</h2>
            <form id="cryptoForm">
                  <input
                        type="text"
                        id="coinInput"
                        placeholder="Enter coin (bitcoin, ethereum, matic-network)"
                        required
                  />
                  <button type="submit">Get Stats</button>
            </form>

            <div class="result" id="result"></div>

            <h2>Get Price Deviation</h2>
            <form id="deviationForm">
                  <input
                        type="text"
                        id="deviationCoinInput"
                        placeholder="Enter coin (bitcoin, ethereum, matic-network)"
                        required
                  />
                  <button type="submit">Get Deviation</button>
            </form>

            <div class="deviationResult" id="deviationResult"></div>

            <% Object.keys(groupedCryptos).forEach(date => { %>
            <h2>Fetched on <%= date %></h2>
            <table>
                  <thead>
                        <tr>
                              <th>Name</th>
                              <th>Price (USD)</th>
                              <th>Market Cap (USD)</th>
                              <th>24h Change (%)</th>
                              <th>Timestamp</th>
                        </tr>
                  </thead>
                  <tbody>
                        <% groupedCryptos[date].forEach(crypto => { %>
                        <tr>
                              <td><%= crypto.name %></td>
                              <td><%= crypto.price %></td>
                              <td><%= crypto.marketCap %></td>
                              <td><%= crypto.change24h %></td>
                              <td><%= crypto.timestamp.toLocaleString() %></td>
                        </tr>
                        <% }); %>
                  </tbody>
            </table>
            <% }); %>

            <script>
                  document
                        .getElementById("cryptoForm")
                        .addEventListener("submit", async function (event) {
                              event.preventDefault();
                              const coin =
                                    document.getElementById("coinInput").value;

                              try {
                                    const response = await fetch(
                                          `/stats?coin=${coin}`
                                    );
                                    if (!response.ok) {
                                          throw new Error("Coin not found");
                                    }
                                    const data = await response.json();
                                    document.getElementById(
                                          "result"
                                    ).innerHTML = `
                        <h3>${
                              coin.charAt(0).toUpperCase() + coin.slice(1)
                        } Stats:</h3>
                        <p>Price: $${data.price}</p>
                        <p>Market Cap: $${data.marketCap}</p>
                        <p>24h Change: ${data["24hChange"]}%</p>`;
                              } catch (error) {
                                    document.getElementById(
                                          "result"
                                    ).innerHTML = `<p style="color:red;">Error: ${error.message}</p>`;
                              }
                        });

                  document
                        .getElementById("deviationForm")
                        .addEventListener("submit", async function (event) {
                              event.preventDefault();
                              const coin =
                                    document.getElementById(
                                          "deviationCoinInput"
                                    ).value;

                              try {
                                    const response = await fetch(
                                          `/deviation?coin=${coin}`
                                    );
                                    if (!response.ok) {
                                          throw new Error("Coin not found");
                                    }
                                    const data = await response.json();
                                    document.getElementById(
                                          "deviationResult"
                                    ).innerHTML = `
                        <h3>${
                              coin.charAt(0).toUpperCase() + coin.slice(1)
                        } Price Deviation:</h3>
                        <p>Standard Deviation: $${data.deviation}</p>`;
                              } catch (error) {
                                    document.getElementById(
                                          "deviationResult"
                                    ).innerHTML = `<p style="color:red;">Error: ${error.message}</p>`;
                              }
                        });
            </script>
      </body>
</html>
